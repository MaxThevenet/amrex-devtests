let ri = 1/r, xr = xb/r, yr = yb/r

 0 ( 0 , 0 ):  ri

 1 ( 1 , 0 ):  ri2 * xr
 8 ( 0 , 1 ):  ri2 * yr

 2 ( 2 , 0 ):  ri3 * (3 * xr2   - 1)    # (3*xb**2/r2 - 1)/r3
 9 ( 1 , 1 ):  ri3 * (3 * xr*yr)        #  3*xb*yb/r5
15 ( 0 , 2 ):  ri3 * (3 * yr2   - 1)    # (3*yb**2/r2 - 1)/r3

 3 ( 3 , 0 ):  ri4 * xr * (15*xr2 - 9)    # -3*xb*(-5*xb**2/r2 + 3)/r5
10 ( 2 , 1 ):  ri4 * yr * (15*xr2 - 3)    # -3*yb*(-5*xb**2/r2 + 1)/r5
16 ( 1 , 2 ):  ri4 * xr * (15*yr2 - 3)    #  3*xb*( 5*yb**2/r2 - 1)/r5
21 ( 0 , 3 ):  ri4 * yr * (15*yr2 - 9)    # -3*yb*(-5*yb**2/r2 + 3)/r5

 4 ( 4 , 0 ):  ri5 * (105*xr4 - 90*xr2 + 9)               # 3*(35*xb4/r4 - 30*xb2/r2 + 3)/r5
11 ( 3 , 1 ):  ri5 * xr * yr * (105*xr2 - 45)             # 15*xb*yb*(7*xb2/r2 - 3)/r7
17 ( 2 , 2 ):  ri5 * (105*xr2*yr2 - 15*xr2 - 15*yr2 + 3)  # 3*(35*xb2*yb2/r4 - 5*xb2/r2 - 5*yb2/r2 + 1)/r5
22 ( 1 , 3 ):  ri5 * xr * yr * (105*yr2 - 45)             # 15*xb*yb*(7*yb2/r2 - 3)/r7
26 ( 0 , 4 ):  ri5 * (105*yr4 - 90*yr2 + 9)               # 3*(35*yb4/r4 - 30*yb2/r2 + 3)/r5

 5 ( 5 , 0 ):  ri6 * xr * (945*xr4 - 1050*xr2 + 225)               # -15*xb*(-63*xb4/r4 + 70*xb2/r2 - 15)/r7
12 ( 4 , 1 ):  ri6 * yr * (945*xr4 - 630*xr2 + 45)                 # -45*yb*(-21*xb4/r4 + 14*xb2/r2 - 1)/r7
18 ( 3 , 2 ):  ri6 * xr * (945*xr2*yr2 - 105*xr2 - 315*yr2 + 45)   # -15*xb*(-63*xb2*yb2/r4 + 7*xb2/r2 + 21*yb2/r2 - 3)/r7
23 ( 2 , 3 ):  ri6 * yr * (945*xr2*yr2 - 315*xr2 - 105*yr2 + 45)   # -15*yb*(-63*xb2*yb2/r4 + 21*xb2/r2 + 7*yb2/r2 - 3)/r7
27 ( 1 , 4 ):  ri6 * xr * (945*yr4 - 630*yr2 + 45)                 #  45*xb*( 21*yb4/r4 - 14*yb2/r2 + 1)/r7
30 ( 0 , 5 ):  ri6 * yr * (945*yr4 - 1050*yr2 + 225)               # -15*yb*(-63*yb4/r4 + 70*yb2/r2 - 15)/r7

 6 ( 6 , 0 ):  ri7 * 45 * (231*xr6 - 315*xr4 + 105*xr2 - 5)                          # 45*(231*xb6/r6 - 315*xb4/r4 + 105*xb2/r2 - 5)/r7
13 ( 5 , 1 ):  ri7 * 315 * xr*yr * (33*xr4 - 30*xr2 + 5)                             # 315*xb*yb*(33*xb4/r4 - 30*xb2/r2 + 5)/r9
19 ( 4 , 2 ):  ri7 * 45 * (231*xr4*yr2 - 21*xr4 - 126*xr2*yr2 + 14*xr2 + 7*yr2 - 1)  # 45*(231*xb4*yb2/r6 - 21*xb4/r4 - 126*xb2*yb2/r4 + 14*xb2/r2 + 7*yb2/r2 - 1)/r7
24 ( 3 , 3 ):  ri7 * 945 * xr*yr * (11*xr2*yr2 - 3*xr2 - 3*yr2 + 1)                  # 945*xb*yb*(11*xb2*yb2/r4 - 3*xb2/r2 - 3*yb2/r2 + 1)/r9
28 ( 2 , 4 ):  ri7 * 45 * (231*xr2*yr4 - 126*xr2*yr2 + 7*xr2 - 21*yr4 + 14*yr2 - 1)  # 45*(231*xb2*yb4/r6 - 126*xb2*yb2/r4 + 7*xb2/r2 - 21*yb4/r4 + 14*yb2/r2 - 1)/r7
31 ( 1 , 5 ):  ri7 * 315 * xr*yr * (33*yr4 - 30*yr2 + 5)                             # 315*xb*yb*(33*yb4/r4 - 30*yb2/r2 + 5)/r9
33 ( 0 , 6 ):  ri7 * 45 * (231*yr6 - 315*yr4 + 105*yr2 - 5)                          # 45*(231*yb6/r6 - 315*yb4/r4 + 105*yb2/r2 - 5)/r7

 7 ( 7 , 0 ):  ri8*315*xr*(429*xr6 - 693*xr4 + 315*xr2 - 35)                         # -315*xb*(-429*xb6/r6 + 693*xb4/r4 - 315*xb2/r2 + 35)/r9
14 ( 6 , 1 ):  ri8*315*yr*(429*xr6 - 495*xr4 + 135*xr2 - 5)                          # -315*yb*(-429*xb6/r6 + 495*xb4/r4 - 135*xb2/r2 + 5)/r9
20 ( 5 , 2 ):  ri8*315*xr*(429*xr4*yr2 - 33*xr4 - 330*xr2*yr2 + 30*xr2 + 45*yr2 - 5) # -315*xb*(-429*xb4*yb2/r6 + 33*xb4/r4 + 330*xb2*yb2/r4 - 30*xb2/r2 - 45*yb2/r2 + 5)/r9
25 ( 4 , 3 ):  ri8*945*yr*(143*xr4*yr2 - 33*xr4 - 66*xr2*yr2 + 18*xr2 + 3*yr2 - 1)   # -945*yb*(-143*xb4*yb2/r6 + 33*xb4/r4 + 66*xb2*yb2/r4 - 18*xb2/r2 - 3*yb2/r2 + 1)/r9
29 ( 3 , 4 ):  ri8*945*xr*(143*xr2*yr4 - 66*xr2*yr2 + 3*xr2 - 33*yr4 + 18*yr2 - 1)   # -945*xb*(-143*xb2*yb4/r6 + 66*xb2*yb2/r4 - 3*xb2/r2 + 33*yb4/r4 - 18*yb2/r2 + 1)/r9
32 ( 2 , 5 ):  ri8*315*yr*(429*xr2*yr4 - 330*xr2*yr2 + 45*xr2 - 33*yr4 + 30*yr2 - 5) # -315*yb*(-429*xb2*yb4/r6 + 330*xb2*yb2/r4 - 45*xb2/r2 + 33*yb4/r4 - 30*yb2/r2 + 5)/r9
34 ( 1 , 6 ):  ri8*315*xr*(429*yr6 - 495*yr4 + 135*yr2 - 5)                          # 315*xb*(429*yb6/r6 - 495*yb4/r4 + 135*yb2/r2 - 5)/r9
35 ( 0 , 7 ):  ri8*315*yr*(429*yr6 - 693*yr4 + 315*yr2 - 35)                         # -315*yb*(-429*yb6/r6 + 693*yb4/r4 - 315*yb2/r2 + 35)/r9
